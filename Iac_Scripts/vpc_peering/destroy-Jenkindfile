pipeline {
    agent any
	
    stages {
        stage('Checkout') {
            steps {
            git branch: 'main', credentialsId: 'github', url: 'https://github.com/send2durai/ansible-notes.git'

          }
        }
		stage("Getting AWS Credentials"){
			steps {
              withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'Jenkins-aws-creds-binding', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                sh '''
                   aws --version
                   aws ec2 describe-instances
          '''
        }
      }
	}
    stage ("Changing to the directory, where the terraform scripts exist"){
	    steps {
	    echo "change directory"
		 sh    '''
		       ls -lrth
		       cd Iac_Scripts/vpc_peering/
		       ls -larth
		       pwd
		      '''
		}
	}
    stage("terraform plan") {
        steps {
            echo "Going to show us, what is going to be spin up"
                sh  '''
		               pwd
		               cd Iac_Scripts/vpc_peering/
		               echo "Going to perform dry-run"
		               terraform plan
		            '''
            }
        }
		stage("terraform destroy"){
		    steps {
			    echo "Going to execute apply now"
				sh '''
				   cd Iac_Scripts/vpc_peering/
				   ls -lrth
				   terraform destroy --auto-approve
			    '''
			}
		}

	    stage("Upload file"){
            steps {
                slackUploadFile channel: 'demo_jenkins_slack', credentialId: 'b9411ed2-2dae-4273-be8a-b3a0eb76fdab', filePath: '/tmp/tf_output.txt', initialComment: 'Here is your file'
            }
        }
    }
        post {
            always {
            echo "********** Sending Slack Notifications on Piepline Job Status"
        }
        failure {
            slackSend channel: 'demo_jenkins_slack', message: 'Hey DevOps Team  #########  Job Failure. Please check the console output  #########'
        }
        success {
            slackSend channel: 'demo_jenkins_slack', message: 'Hey DevOps Team  #########  Job Succeed. Resoruces have been provisioned  #########'
        }
    }
}
