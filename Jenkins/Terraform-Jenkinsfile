pipeline {
    agent any
	parameters {
    choice choices: ['Development', 'Certification', 'Staging', 'Production'], description: 'Please select the environment?', name: 'ENVIRONMENT'
	choice choices: ['terraform apply --auto-approve'], description: 'This is the terraform action that we call it in our terraform scripts', name: 'TF_APPLY'
	choice choices: ['terraform destroy --auto-approve'], description: 'This is the terraform action that we call it in our terraform scripts', name: 'TF_DESTROY'
    }
    stages{
    stage("Are we good to deploy the Infra Provisioning?"){
        input{
           message "Should we deploy the TF Infra Project?"
        }
	    steps{
	      echo "Terraform project will begin"
	      echo "Terraform project build no is: ${BUILD_ID}"
	      echo "You've chosen environment is: ${ENVIRONMENT}"
	    }
	}
    stage('Cloning the Repository'){
        steps {
            echo 'Git cloning in progress..'
	    git branch: 'main', url: 'https://github.com/send2durai/ansible-notes.git'
        }
    }
    stage('Terraform Init'){
        steps {
		sh '''
                      echo 'Terraform Init will begun..'
		      mkdir iam_user
		      cd iam_user
	              cp ../Iac_Scripts/Iam_user_creation/* .
		      sleep 5
                      terraform init
		      terraform plan
		'''
        }
    }
    stage('Terraform fmt'){
        steps {
            echo 'Terraform format...'
	    sh '''
	      cd iam_user
	      terraform fmt
	    '''
        }
    }
	stage('Terraform validate'){
           steps {
              echo 'Terraform validate...'
	      sh '''
	         cd iam_user
	         terraform validate
	      '''
            }
	}
	stage('Terraform apply'){
           steps {
              sh '''
	         cd iam_user
	         echo "Terraform apply in progress"
	         ${TF_APPLY}
		 sleep 10
		 echo "Going to perform destroy the resources"
		 ${TF_DESTROY}
	      '''
             }
       }
	stage('Workspace CleanUp'){
	   steps{
	      echo "Build_Id:${BUILD_ID} on Environment:${ENVIRONMENT} workspace is deleted"
	      cleanWs()
             }
	}
	stage('Happy Learning Automation!!'){
	   steps{
	      echo "The Job is succeed!!"
             }
	}
   }
 }
