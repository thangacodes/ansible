
# rpm -qa | grep httpd
# systemctl status httpd
# systemctl status firewalld
# firewall-cmd --list-all


## fdisk -l => To see the file system
# df -h     ==> To see mounted or not
# df -T     ==> To see xFs file system 

# ansible [target] -m [module] -a "[module options]"

# ping localhost
ansible localhost -m ping
# Creating a file on all remote clients
ansible localhost -m file -a "path=/home/ec2-user/file123 state=touch mode=0700"
# Deleting a file on all remote clients
ansible localhost -m file -a "path=/home/ec2-user/file123 state=absent"
# Copying a file to remote clients
ansible localhost -m copy -a "src=/tmp/adhoc2 dest=/home/ec2-user/adhoc2"
# Installing package (telnet and httpd-manual)
ansible localhost -m yum -a "name=telnet state=present"
rpm -qa | grep telnet
ansible localhost -m yum -a "name=httpd-manual state=present" 
rpm -qa | grep httpd
# Starting httpd package service
ansible localhost -m service -a "name=httpd state=started"
# Start httpd and enable at boot time
ansible all -m service -a "name=httpd state=started enabled=yes"
# Checking httpd service status on remote client
ansible localhost -m shell -a "systemctl status httpd"
# Remove httpd package
ansible localhost -m yum -a "name=httpd state=absent"
OR 
ansible localhost -m shell -a "yum remove httpd"


# User Creation Using  Ad-hoc:
ansible remote -m user -a "name=jsmith home=/home/jsmith shell=/bin/bash state=present"

# To add a user to a different group:
ansible remote -m user -a "name=jsmith group=ec2-user"

# Deleting a user on remote machines:
ansible remote -m user -a "name=jsmith home=/home/jsmith shell=/bin/bash state=absent"
OR
ansible remote -m shell -a "userdel jsmith"

# Getting system information from remote clients
ansible remote -m setup

# You can run commands on the remote host without a shell module e.g. reboot client1
ansible remote -a "/sbin/reboot"
